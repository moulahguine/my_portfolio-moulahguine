@use "../../assets/styles/variables" as *;
@use "../../assets/styles/mixins" as *;

.hero {
  display: grid;
  align-items: center;
  width: 100%;
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    -45deg,
    $bg-primary,
    $color-accent,
    $color-accent-light
  );
  background-size: 400% 400%;
  border-bottom-right-radius: 100% 10%;
  animation: gradientShift 8s ease infinite;

  // Floating particles
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
        2px 2px at 20px 30px,
        $color-primary,
        transparent
      ),
      radial-gradient(2px 2px at 40px 70px, $color-primary-lighter, transparent),
      radial-gradient(1px 1px at 90px 40px, $color-primary-lighter, transparent),
      radial-gradient(
        1px 1px at 130px 80px,
        $color-primary-lighter,
        transparent
      ),
      radial-gradient(
        2px 2px at 160px 30px,
        $color-primary-lighter,
        transparent
      );
    background-attachment: fixed;
    background-repeat: repeat;
    background-size: 200px 100px;
    animation: float 20s linear infinite;
    pointer-events: none;
  }

  // Animated waves
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(255, 255, 255, 0.1) 50%,
      transparent 70%
    );
    animation: wave 6s ease-in-out infinite;
    pointer-events: none;
  }

  .hero__inner {
    @include container;
    display: grid;
    grid-template-columns: 1fr 1fr 20px;
    align-items: center;
    position: relative;
    z-index: 2;
    .hero__content {
      .hero__title {
        @include heading-1;
        margin-bottom: $spacing-base;
        color: $text-primary;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

        span {
          @include text-gradient;
        }
      }

      .hero__subtitle {
        @include heading-2;
        margin-bottom: $spacing-lg;
        color: $text-secondary;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
      }

      .hero__description {
        @include body-text;
        margin-bottom: $spacing-xl;
        color: $text-muted;
        max-width: 500px;
      }
      // you can find locaion style in location folder inside components folder
      .hero__resume {
        @include flex-center;
        justify-content: flex-start;
        gap: 1rem;
        flex-wrap: wrap;

        .btn {
          @include button-primary;
          gap: 0.5rem;

          &::before {
            content: "";
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(
              90deg,
              transparent,
              rgba(255, 255, 255, 0.4),
              transparent
            );
            transition: left 0.3s ease;
          }

          &:hover {
            transform: translateY(0);
            &::before {
              left: 100%;
            }
          }
        }
      }
    }
    .hero__media {
      @include grid-center;
      width: 500px;
      height: 500px;
      border-radius: 55% 44% 65% 37% / 52% 28% 73% 49%;
      overflow: hidden;
      border: 3px solid $border-light;
      transition: all 0.3s ease;
      position: relative;
      .hero__image {
        z-index: 500;
        position: absolute;
      }
      &:hover {
        box-shadow: 0 0 15px 10px #80b8a9;
        scale: 1.05;
      }
    }
    .hero__social {
      @include slide-in-right(0.5s);
      @include flex-column;

      svg {
        @include flex-center;
        color: $text-primary;
        font-size: $font-size-2xl;
        transition: all 0.3s ease;
        margin: 10px 0;
      }
    }
  }
}

// hero background animations

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0% {
    transform: translateY(0px) translateX(0px);
  }
  50% {
    transform: translateY(-20px) translateX(10px);
  }
  100% {
    transform: translateY(0px) translateX(0px);
  }
}

@keyframes wave {
  0%,
  100% {
    transform: translateX(-100%) rotate(45deg);
  }
  50% {
    transform: translateX(100%) rotate(45deg);
  }
}
